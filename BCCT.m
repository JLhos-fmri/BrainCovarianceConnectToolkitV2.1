function BCCT
clc;clear all;close all;
[pat,nam,ext] = fileparts(which('BCCT.m'));
% addpath([pat,filesep,'extendFunc']); % some immature ideas will add into this fold.
addpath([pat,filesep,'supportFunc']); % add nifti IO and reslice data.
% addpath([pat,filesep,'SomeTemplates']);
TempExistPath = [pat,filesep,'SomeTemplates'];
Hsize = get(0,'ScreenSize');
Bsize = min(Hsize(3),Hsize(4));
BsizeUsed = floor(Bsize*0.6);
POS = [ceil((Hsize(3)-BsizeUsed)/2),ceil((Hsize(4)-BsizeUsed)/2),BsizeUsed,BsizeUsed];

BCCT.TempExistPath = TempExistPath;
BCCT.mainpath = pat;
BCCT.fig = figure('Name','BCCT toolkit',...            
    'menubar','none',...       
    'numbertitle','off',...      
    'color',[0.95 0.95 0.95],...
    'position',POS);
movegui(BCCT.fig,'center'); 
% BCCT.mainaxes = axes('parent',BCCT.fig,...
%     'units','norm',...
%     'pos',[0,0,1,1]);
patmain = which('BCCT.m');
[patfun,nam,ext] = fileparts(patmain);
if ~isempty(dir(fullfile(patfun,'Shepherd_plotout')))
    addpath(fullfile(patfun,'Shepherd_plotout'));
end
% backgroundpictitle = fullfile(patfun,'hospital_bin.jpg');
% [backbin backmap] = imread(backgroundpictitle);
% backbinmax = max(backbin(:)); % 255
% backbinmin = min(backbin(:)); % 0
% backbinrange = backbinmax-backbinmin;
% backbinranges = double(backbinrange);
% backbin_t = (double(backbin)-double(backbinmin))/double(backbinranges); % norm to 0-1
% ranges = 1/10;
% backbin_t1 = backbin_t*ranges;
% backbin_t2 = backbin_t1+(1-ranges);
% backbin_t3 = backbin_t2*backbinranges;
% backbin2 = uint8(backbin_t3);
% colmap = [1-ranges:ranges/64:1;1-ranges:ranges/64:1;1-ranges:ranges/64:1]';
% image(backbin2,'parent',BCCT.mainaxes,'CDataMapping','scaled');
% axis(BCCT.mainaxes,'off');
% freezeColors(GLMflex.des.mainwin);
% colormap(BCCT.mainaxes,colmap)
BCCT.NameExt = uicontrol('parent',BCCT.fig,...
    'units','norm',...
    'pos',[0.05,0.85,0.9,0.10],...
    'style','text',...
    'string',{'Brain Covariance Connectivity','Toolkit v2.1'},...
    'fontunits', 'normalized',...
    'fontsize',0.35,...
    'fontweight','bold',...
    'horizontalalign','center');
BCCT.NameExt2 = uicontrol('parent',BCCT.fig,...    
    'units','norm',...
    'pos',[0.05,0.75,0.9,0.08],...
    'style','text',...
    'string',{'Department of Radiology','Jinling Hospital, School of Medicine, Nanjing University'},...
    'fontunits', 'normalized',...
    'fontsize',0.2,...
    'fontweight','bold',...
    'horizontalalign','center',...
    'foregroundcolor','r');


BCCT.SCNax = axes('parent',BCCT.fig,...
    'pos',[0.1,0.55,0.2,0.2]);
BCCT.GCAax = axes('parent',BCCT.fig,...
    'pos',[0.4,0.55,0.2,0.2]);
BCCT.WTAax = axes('parent',BCCT.fig,...
    'pos',[0.7,0.55,0.2,0.2]);
BCCT.Statax = axes('parent',BCCT.fig,...
    'pos',[0.1,0.2,0.2,0.2]);
BCCT.MODax = axes('parent',BCCT.fig,...
    'pos',[0.4,0.2,0.2,0.2]);
BCCT.SCNPb = uicontrol('parent',BCCT.fig,...
    'units','norm',...
    'pos',[0.1,0.425,0.2,0.1],...
    'style','pushbutton',...
    'string','SCN',...
    'fontunits', 'normalized',...
    'fontsize',0.35,...
    'fontweight','bold',...
    'horizontalalign','center');
BCCT.GCAPb = uicontrol('parent',BCCT.fig,...
    'units','norm',...
    'pos',[0.4,0.425,0.2,0.1],...
    'style','pushbutton',...
    'string','CaSCN',...
    'fontunits', 'normalized',...
    'fontsize',0.35,...
    'fontweight','bold',...
    'horizontalalign','center');
BCCT.WTAPb = uicontrol('parent',BCCT.fig,...
    'units','norm',...
    'pos',[0.7,0.425,0.2,0.1],...
    'style','pushbutton',...
    'string','WTA',...
    'fontunits', 'normalized',...
    'fontsize',0.35,...
    'fontweight','bold',...
    'horizontalalign','center');

BCCT.MODPb = uicontrol('parent',BCCT.fig,...
    'units','norm',...
    'pos',[0.4,0.075,0.2,0.1],...
    'style','pushbutton',...
    'string','Modulate',...
    'fontunits', 'normalized',...
    'fontsize',0.35,...
    'fontweight','bold',...
    'horizontalalign','center');
axis(BCCT.SCNax,'off')
axis(BCCT.GCAax,'off')
axis(BCCT.WTAax,'off')
axis(BCCT.Statax,'off')
axis(BCCT.MODax,'off')
BCCT.Exit = uicontrol('parent',BCCT.fig,...
    'units','norm',...
    'pos',[0.7,0.075,0.2,0.1],...
    'style','pushbutton',...
    'string','Exit',...
    'fontunits', 'normalized',...
    'fontsize',0.35,...
    'fontweight','bold',...
    'horizontalalign','center');

BCCT.StatPb = uicontrol('parent',BCCT.fig,...
    'units','norm',...
    'pos',[0.1,0.075,0.2,0.1],...
    'style','popupmenu',...
    'string',{'Statistic','SCN','WTA','CaSCN','Modulate'},...
    'fontunits', 'normalized',...
    'fontsize',0.35,...
    'fontweight','bold',...
    'horizontalalign','center',...
    'Tooltipstring','Stastical analysis for two groups');

BCCT.Utils = uicontrol('parent',BCCT.fig,...
    'units','norm',...
    'pos',[0.7,0.25,0.2,0.1],...
    'style','popupmenu',...
    'string',{'Utilites','Make Final Mask','help','Viewer','View for Surf'},...
    'fontunits', 'normalized',...
    'fontsize',0.35,...
    'fontweight','bold',...
    'horizontalalign','center');
STATPICPAT = fullfile(patfun,'stat.png');
[STATPIC STATMAP] = imread(STATPICPAT);
imshow(STATPIC,STATMAP,'parent',BCCT.Statax)

mapmodPAT = fullfile(patfun,'mapmod.bmp');
[mapPIC mapMAP] = imread(mapmodPAT);
imshow(mapPIC,mapMAP,'parent',BCCT.SCNax)

matmodPAT = fullfile(patfun,'Modulate.bmp');
[matPIC matMAP] = imread(matmodPAT);
imshow(matPIC,matMAP,'parent',BCCT.MODax)

WTAPAT = fullfile(patfun,'WTAmod.bmp');
[WTAPIC WTAMAP] = imread(WTAPAT);
imshow(WTAPIC,WTAMAP,'parent',BCCT.WTAax)

GCAPAT = fullfile(patfun,'GCA.bmp');
[GCAPIC GCAMAP] = imread(GCAPAT);
imshow(GCAPIC,GCAMAP,'parent',BCCT.GCAax)

set(BCCT.SCNPb,'callback',{@ASFCSCN,BCCT});
set(BCCT.MODPb,'callback',{@ASFCMOD,BCCT});
set(BCCT.WTAPb,'callback',{@ASFCWTA,BCCT});
set(BCCT.StatPb,'callback',{@ASFCStatistic,BCCT});
set(BCCT.Exit,'callback',{@ASFCEXIT,BCCT});
set(BCCT.Utils,'callback',{@ASFCUtilti,BCCT});
set(BCCT.GCAPb,'callback',{@ASFCGCA,BCCT});
end
function ASFCGCA(varargin)
BCCT = varargin{3};
close(BCCT.fig)
patmainfun = which('BCCT.m');
[path nam ext] = fileparts(patmainfun);
addpath(fullfile(path,'BCCT_CaSCN'));
BCCT_CaSCN_GUI;
% BCCT_GCA_GUI
end
function ASFCSCN(varargin)
BCCT = varargin{3};
close(BCCT.fig)
patmainfun = which('BCCT.m');
[path nam ext] = fileparts(patmainfun);
addpath(fullfile(path,'BCCT_SCN'));
BCCT_SCN_GUI;
% BCCT_CON_MAP_GUI
end
function ASFCMOD(varargin)
BCCT = varargin{3};
close(BCCT.fig)
patmainfun = which('BCCT.m');
[path nam ext] = fileparts(patmainfun);
addpath(fullfile(path,'BCCT_Modulate'));
BCCT_Modulate_GUI;
end
function ASFCWTA(varargin)
BCCT = varargin{3};
close(BCCT.fig)
patmainfun = which('BCCT.m');
[path nam ext] = fileparts(patmainfun);
addpath(fullfile(path,'BCCTcorr_WTA'));
BCCT_WTA_GUI;
end
function ASFCStatistic(varargin)
BCCT = varargin{3};
patmainfun = which('BCCT.m');
[path nam ext] = fileparts(patmainfun);
addpath(fullfile(path,'BCCT_Statistic'));
valst = get(BCCT.StatPb,'val');
if valst==2
%     BCCT_STAT_GUI;
    BCCT_SCN_statGUI;
    close(BCCT.fig)
end
if valst==3
    BCCT_WTA_statGUI;
    close(BCCT.fig)
end
if valst==4
    BCCT_CaSCN_statGUI;
end
if valst==5
    BCCT_Modulate_statGUI;
end
end
function ASFCEXIT(varargin)
BCCT = varargin{3};
close(BCCT.fig);
end
function ASFCUtilti(varargin)
BCCT = varargin{3};
VALutil = get(BCCT.Utils,'val');

patmainfun = which('BCCT.m');
[path nam ext] = fileparts(patmainfun);
addpath(fullfile(path,'BCCT_Util'));
if VALutil==2 % make final mask
%     addpath([BCCT.mainpath,filesep,'extendFunc',filesep,'MakeFinalMask']);
    BCCT_makefinalMask
end
if VALutil==3
    web('BCCT+manuVer1.mht')
end
if VALutil==4    
    patmainfun = which('BCCT.m');
    [path nam ext] = fileparts(patmainfun);
    addpath(fullfile(path,'BCCT_ShowRes'));
%     BCCT_VIEW_simple;
    BCCT_VIEWmain;
end
if VALutil==5    
    patmainfun = which('BCCT.m');
    [path nam ext] = fileparts(patmainfun);
    addpath(fullfile(path,'BCCT_ShowRes'));
%     BCCT_VIEW_simple;
    BCCT_VIEW_surfsimp;
end
end

